(window["webpackJsonpinitPages"] = window["webpackJsonpinitPages"] || []).push([["Popup"],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Popup/index.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Popup/index.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _configData_eventBus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/configData/eventBus.js */ "./src/configData/eventBus.js");
/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/common.js */ "./src/utils/common.js");
/* harmony import */ var _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/helper.js */ "./src/utils/helper.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


 //import Skeleton from "@/components/Skeleton";
//import CardTextRight from "@/components/Card/CardTextRight";
//import PopupPost from "@/components/Popup/PopupPost";
//import CateBox from "@/components/Box/CateBox";
//import FuncGroup from "@/components/FuncGroup";
//import Header from "@/components/Popup/Header";
//import Footer from "@/components/Popup/Footer";
//import Footer from "@/components/Popup/Footer";

/* harmony default export */ __webpack_exports__["default"] = ({
  name: "Popup",
  props: {
    state: {
      "default": null
    },
    status: {
      ///trạng thái popup (mặc định là đóng)
      "default": false
    },
    typeIcon: {
      "default": ""
    },
    typeContent: {
      "default": "thumb"
    },
    id: {
      "default": null
    },
    topicId: {
      "default": null
    },
    topicName: {
      "default": null
    },
    popupOverload: {
      "default": false
    }
  },
  methods: {
    scrollToLoad: function scrollToLoad(event) {
      var _this = this;

      var element = event.target;

      if (element.scrollHeight - element.scrollTop === element.clientHeight) {
        this.showLoadMore = true;
        this.pages = this.pages + 1;
        var config = _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].checkJwt(this.$root.user); ///call api của bigEvent

        _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getKingToken(function (tk) {
          Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(null, /*! axios */ "./node_modules/axios/index.js", 7)).then(function (_ref) {
            var axios = _ref["default"];
            axios(_utils_common_js__WEBPACK_IMPORTED_MODULE_1__["apiWeb"].topicArticles(_this.$root.buildMethod.domainApi, config[0], config[1], _this.pages, _this.topicId), _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getHeader(tk)).then(function (rs) {
              if (rs.data != "") {
                _this.topicArticles = _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].unqId([].concat(_toConsumableArray(_this.topicArticles), _toConsumableArray(rs.data.data)));
                _this.showLoadMore = false;
              } else {
                _this.showLoadMore = false;

                _this.$el.removeEventListener("scroll", _this.scrollToLoad);
              }
            });
          });
        }, this.$root.buildMethod.domain);
      }
    },
    clickOutSide: function clickOutSide(event) {
      var _this2 = this;

      event.stopPropagation();

      if (this.$el != undefined) {
        ///dk để ktra xem user có bật popup trên popup k, nếu wrappopup => chỉ bật 1 popup
        if (event.target.classList.contains("wrapPopup")) {
          this.$el.style.background = "none";
          this.$el.classList.remove("fade-in");
          this.$el.classList.add("fade-out"); //history.pushState(null, 'popup', '/')

          this.$root.buildMethod.popupClosed();
          setTimeout(function () {
            document.body.style.marginRight = "0"; ///Truyền thông báo đóng popup (layout)

            _configData_eventBus_js__WEBPACK_IMPORTED_MODULE_0__["popupStatus"].$emit("popupStatus", false);

            if (_this2.typeContent != "cateBox" && _this2.typeContent != "thumb") {
              history.go(-1);
            }
          }, 200);
        } else if (event.target.classList.contains("wrapPopupOverload")) {
          //document.title = this.$root.titlePage
          this.$el.classList.remove("fade-in");
          this.$el.classList.add("fade-out");
          this.$root.buildMethod.popupClosed();
          this.$nextTick(function () {
            document.getElementsByClassName('wrapBox')[0].classList.remove("fade-out");
            document.getElementsByClassName('wrapBox')[0].classList.add("fade-in");
          });
          setTimeout(function () {
            ///Truyền thông báo đóng popupOverload (layout)
            _configData_eventBus_js__WEBPACK_IMPORTED_MODULE_0__["popupStatusOverload"].$emit("popupStatusOverload", false);

            if (_this2.typeContent != "cateBox" && _this2.typeContent != "thumb") {
              history.go(-1);
            }
          }, 200); //history.pushState(null, 'popup', '/')
        }
      }
    },
    closePopup: function closePopup() {
      var _this3 = this;

      this.$root.buildMethod.popupClosed(); //document.title = this.$root.titlePage
      ///dk để ktra xem user có bật popup trên popup k, nếu wrappopup => chỉ bật 1 popup

      if (this.$el.classList.contains("wrapPopup")) {
        this.$el.style.background = "none";
        this.$el.classList.remove("fade-in");
        this.$el.classList.add("fade-out");
        setTimeout(function () {
          document.body.style.marginRight = "0";
          _configData_eventBus_js__WEBPACK_IMPORTED_MODULE_0__["popupStatus"].$emit("popupStatus", false); //history.pushState({}, 'popup', '/')

          if (_this3.typeContent != "cateBox" && _this3.typeContent != "thumb") {
            history.go(-1);
          }
        }, 200);
      } else if (this.$el.classList.contains("wrapPopupOverload")) {
        this.$el.classList.remove("fade-in");
        this.$el.classList.add("fade-out");
        this.$nextTick(function () {
          document.getElementsByClassName('wrapBox')[0].classList.remove("fade-out");
          document.getElementsByClassName('wrapBox')[0].classList.add("fade-in");
        });
        setTimeout(function () {
          ///Truyền thông báo đóng popupOverload (layout)
          _configData_eventBus_js__WEBPACK_IMPORTED_MODULE_0__["popupStatusOverload"].$emit("popupStatusOverload", false); //history.pushState({}, 'popup', this.$root.origin)

          if (_this3.typeContent != "cateBox" && _this3.typeContent != "thumb") {
            history.go(-1);
          }
        }, 200);
      }
    },
    onDragStart: function onDragStart(event) {
      this.$el.firstElementChild.classList.add("dragging");
      var style = getComputedStyle(this.$el.firstElementChild);
      this.$el.firstElementChild.drag = {
        y: (event.pageY || event.clientY + document.body.scrollTop) - this.$el.firstElementChild.offsetTop + parseInt(style.marginTop),
        source: this.$el.firstElementChild
      };
    },
    onDragMove: function onDragMove(event) {
      if (!this.$el.firstElementChild.drag) {
        return;
      } else if (this.$el.firstElementChild.drag != null) {
        this.move = true;
        this.$el.firstElementChild.style.top = (event.pageY || event.clientY + document.body.scrollTop) - this.$el.firstElementChild.drag.y + "px";
      }
    },
    onDragEnd: function onDragEnd(event) {
      if (!this.$el.firstElementChild.drag) {
        return;
      } else if (this.move) {
        this.$el.firstElementChild.classList.remove("dragging");

        if (parseInt(this.$el.firstElementChild.style.top.replace("px", "")) > parseInt(this.top.replace("px", "")) + 100 || parseInt(this.$el.firstElementChild.style.top.replace("px", "")) < parseInt(this.top.replace("px", "")) - 100) {
          this.closePopup();
        } else {
          this.$el.firstElementChild.style.top = "".concat(this.top, "px");
        }

        this.$el.firstElementChild.drag = null;
        this.move = false;
      } else {
        this.$el.firstElementChild.classList.remove("dragging");
        this.$el.firstElementChild.drag = null;
        this.move = false;
      }
    },
    onDragOver: function onDragOver(event) {
      event.preventDefault();
    },
    openPopup__: function openPopup__(e, b) {
      /// click vào mở popup trên popup
      b.preventDefault(); //this.$el.firstElementChild.style.visibility='hidden'

      this.$el.firstElementChild.classList.remove("fade-in");
      this.$el.firstElementChild.classList.add("fade-out");
      var id = arguments[0]; ///truyền status để mở popup (layout)

      id != null || id != undefined || id != "" ? ///Truyền thông báo mở popupOverload (layout)
      _configData_eventBus_js__WEBPACK_IMPORTED_MODULE_0__["popupStatusOverload"].$emit("popupStatusOverload", true, "content", "content", {
        id: id
      }) : "";
    }
  },
  computed: {
    getThis: function getThis() {
      return this;
    }
  },
  components: {
    //Header,Footer,PopupPost,CardTextRight,FuncGroup,CateBox,Skeleton
    Header: function Header() {
      return __webpack_require__.e(/*! import() | Header */ "Header").then(__webpack_require__.bind(null, /*! @/components/Popup/Header */ "./src/components/Popup/Header.vue"));
    },
    Footer: function Footer() {
      return __webpack_require__.e(/*! import() | Footer */ "Footer").then(__webpack_require__.bind(null, /*! @/components/Popup/Footer */ "./src/components/Popup/Footer.vue"));
    },
    PopupPost: function PopupPost() {
      return __webpack_require__.e(/*! import() | PopupPost */ "PopupPost").then(__webpack_require__.bind(null, /*! @/components/Popup/PopupPost */ "./src/components/Popup/PopupPost.vue"));
    },
    CardTextRight: function CardTextRight() {
      return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! @/components/Card/CardTextRight */ "./src/components/Card/CardTextRight.vue"));
    },
    FuncGroup: function FuncGroup() {
      return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! @/components/FuncGroup */ "./src/components/FuncGroup/index.vue"));
    },
    CateBox: function CateBox() {
      return __webpack_require__.e(/*! import() | CateBox */ "CateBox").then(__webpack_require__.bind(null, /*! @/components/Box/CateBox */ "./src/components/Box/CateBox/index.vue"));
    },
    SkeTextRight: function SkeTextRight() {
      return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! @/components/Skeleton/SkeTextRight */ "./src/components/Skeleton/SkeTextRight.vue"));
    },
    AdvPopupTop: function AdvPopupTop() {
      return __webpack_require__.e(/*! import() | AdvPopupTop */ "AdvPopupTop").then(__webpack_require__.bind(null, /*! @/components/Banner/AdvPopupTop */ "./src/components/Banner/AdvPopupTop.vue"));
    }
  },
  data: function data() {
    return {
      top: "0",
      pages: 0,
      move: false,
      showLoadMore: false,
      topicArticles: null,
      //api của bigEvent
      categoryInterested: null,
      //api của cateBox (chuyên mục)
      specializedNews: null,
      //api của cateBox (chuyên trang),
      detail: null,
      ///api của detail popup,
      listBookmark: null,
      //api thumb (ds bài viết đã đánh dấu)
      key: 0
    };
  },
  created: function created() {
    var _this4 = this;

    var config = _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].checkJwt(this.$root.user);

    switch (this.typeContent) {
      case "bigevent":
        if (this.state == null) {
          Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(null, /*! axios */ "./node_modules/axios/index.js", 7)).then(function (_ref2) {
            var axios = _ref2["default"];
            ///call api của bigEvent
            _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getKingToken(function (tk) {
              axios(_utils_common_js__WEBPACK_IMPORTED_MODULE_1__["apiWeb"].topicArticles(_this4.$root.buildMethod.domainApi, config[0], config[1], _this4.pages, _this4.topicId), _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getHeader(tk)).then(function (rs) {
                _this4.topicArticles = _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].unqId(rs.data.data);

                _this4.$nextTick(function () {
                  if (_this4.state == null && _this4.$root.buildMethod.topicId == 0) {
                    history.pushState(_objectSpread(_objectSpread({}, _this4.topicArticles), {}, {
                      type: "bigevent",
                      topicId: _this4.topicId,
                      popupIndex: 1,
                      title: document.title,
                      typeIcon: _this4.typeIcon,
                      typeContent: _this4.typeContent
                    }), 'popup', '/su-kien-noi-bat-' + _this4.topicId + '.htm');
                  }

                  _this4.$el.style.alignItems = 'normal';
                });
              })["catch"](function (e) {
                return console.error(e);
              });
            }, _this4.$root.buildMethod.domain);
          });
        } else {
          this.topicArticles = this.state;
          this.$nextTick(function () {
            document.body.style.overflowY = "hidden";
            _this4.$el.style.alignItems = 'normal';
          });
        }

        break;

      case "hottopic":
        if (this.state == null) {
          Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(null, /*! axios */ "./node_modules/axios/index.js", 7)).then(function (_ref3) {
            var axios = _ref3["default"];
            _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getKingToken(function (tk) {
              axios(_utils_common_js__WEBPACK_IMPORTED_MODULE_1__["apiWeb"].topicArticles(_this4.$root.buildMethod.domainApi, config[0], config[1], _this4.pages, _this4.topicId), _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getHeader(tk)).then(function (rs) {
                _this4.topicArticles = _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].unqId(rs.data.data);

                _this4.$nextTick(function () {
                  if (_this4.state == null && _this4.$root.buildMethod.topicId == 0) {
                    history.pushState(_objectSpread(_objectSpread({}, _this4.topicArticles), {}, {
                      type: "hottopic",
                      topicId: _this4.topicId,
                      popupIndex: 1,
                      title: document.title,
                      typeIcon: _this4.typeIcon,
                      typeContent: _this4.typeContent
                    }), 'popup', '/chu-de-noi-bat-' + _this4.topicId + '.htm');
                  }

                  _this4.$el.style.alignItems = 'normal';
                });
              })["catch"](function (e) {
                return console.error(e);
              });
            }, _this4.$root.buildMethod.domain);
          });
        } else {
          this.topicArticles = this.state;
          this.$nextTick(function () {
            _this4.$el.style.alignItems = 'normal';
            document.body.style.overflowY = "hidden";
          });
        }

        break;

      case "thumb":
        Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(null, /*! axios */ "./node_modules/axios/index.js", 7)).then(function (_ref4) {
          var axios = _ref4["default"];
          _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getKingToken(function (tk) {
            axios(_utils_common_js__WEBPACK_IMPORTED_MODULE_1__["apiWeb"].listBookmark(_this4.$root.buildMethod.domainApi, config[0], config[1]), _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getHeader(tk)).then(function (rs) {
              if (rs.data != null) {
                _this4.listBookmark = rs.data.data;
              }

              if (_this4.listBookmark != null && _this4.listBookmark.length > 3) {
                for (var i = 0; i < _this4.listBookmark.length; i++) {
                  _this4.listBookmark[i].image = _this4.listBookmark[i].sourceImage;
                }

                _this4.$nextTick(function () {
                  _this4.$el.style.alignItems = 'normal';
                });
              }
            })["catch"](function (e) {
              return console.error(e);
            });
          }, _this4.$root.buildMethod.domain);
        });
        break;

      case "cateBox":
        Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(null, /*! axios */ "./node_modules/axios/index.js", 7)).then(function (_ref5) {
          var axios = _ref5["default"];
          _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getKingToken(function (tk) {
            axios(_utils_common_js__WEBPACK_IMPORTED_MODULE_1__["apiWeb"].categoryInterested(_this4.$root.buildMethod.domainApi, config[0], config[1]), _utils_helper_js__WEBPACK_IMPORTED_MODULE_2__["commonHelper"].getHeader(tk)).then(function (rs) {
              _this4.categoryInterested = rs.data.data.filter(function (x) {
                return x.type == 2;
              });
              _this4.specializedNews = rs.data.data.filter(function (x) {
                return x.type == 1;
              });

              if (_this4.categoryInterested.length == 0) {
                _this4.categoryInterested = null;
              }

              if (_this4.specializedNews.length == 0) {
                _this4.specializedNews = null;
              }

              if (_this4.categoryInterested != null && _this4.categoryInterested.length > 3 || _this4.specializedNews != null && _this4.specializedNews.length > 3) {
                _this4.$nextTick(function () {
                  _this4.$el.style.alignItems = 'normal';
                  _this4.top = '0';
                });
              }
            })["catch"](function (e) {
              return console.error(e);
            });
          }, _this4.$root.buildMethod.domain);
        }); ///call api của cateBox

        break;

      case 'content':
        this.$nextTick(function () {
          _this4.$el.style.alignItems = 'normal';
        });
        break;
    }
  },
  mounted: function mounted() {
    //if (this.typeContent != "content" && this.typeContent != "bigevent" && this.typeContent != "thumb" && this.typeContent != "cateBox") {
    if (this.typeContent != "content" && this.typeContent != "bigevent" && this.typeContent != "hottopic") {
      this.top = "".concat(this.$el.firstElementChild.offsetTop);
      this.$el.addEventListener("mousedown", this.onDragStart);
      this.$el.addEventListener("mousemove", this.onDragMove);
      this.$el.addEventListener("mouseup", this.onDragEnd);
      this.$el.addEventListener("mouseout", this.onDragOver);
    } else if (this.typeContent == 'bigevent' && this.$el.classList.contains('wrapPopup') || this.typeContent == 'hottopic' && this.$el.classList.contains('wrapPopup')) {
      this.$el.addEventListener("scroll", this.scrollToLoad);
    }
  },
  updated: function updated() {
    var _this5 = this;

    if (this.state != null) {
      if (this.state.type == 'bigevent' || this.state.type == 'hottopic') {
        this.topicArticles = this.state;
        this.$nextTick(function () {
          _this5.$el.style.alignItems = 'normal';
          document.body.style.overflowY = "hidden";
        });
      }
    }

    this.top = "".concat(this.$el.firstElementChild.offsetTop);
  }
});

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/Popup/index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css&":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Popup/index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Popup/index.vue?vue&type=template&id=475807a2&scoped=true&":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Popup/index.vue?vue&type=template&id=475807a2&scoped=true& ***!
  \*****************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: this.popupOverload
        ? "wrapPopupOverload fade-in"
        : "wrapPopup fade-in",
      style: [
        this.typeContent == "content"
          ? { alignItems: "normal" }
          : { alignItems: "center" }
      ],
      on: { click: _vm.clickOutSide }
    },
    [
      _c(
        "div",
        {
          staticClass: "wrapBox",
          style: [
            this.typeContent == "content"
              ? { width: "1160px", marginTop: "30px" }
              : { width: "740px" },
            this.typeContent == "content" ||
            this.typeContent == "bigevent" ||
            this.typeContent == "hottopic"
              ? { overflow: "none", cursor: "context-menu" }
              : { overflow: "hidden", cursor: "grab" }
          ]
        },
        [
          _c(
            "div",
            { staticClass: "popup_container" },
            [
              _c("Header", {
                attrs: {
                  closePopup: this.closePopup,
                  typeIcon: this.typeIcon,
                  topicName: this.topicName
                }
              }),
              _vm._v(" "),
              this.typeContent == "content" ? _c("AdvPopupTop") : _vm._e(),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "content_popup" },
                [
                  this.typeContent == "thumb" && this.listBookmark != null
                    ? _c(
                        "ul",
                        { staticClass: "list_afnews-mid" },
                        _vm._l(this.listBookmark, function(item, index) {
                          return _c(
                            "li",
                            { key: index },
                            [
                              _c("CardTextRight", {
                                attrs: {
                                  sizeSource: 13,
                                  data: item,
                                  positionSource: "bottom",
                                  type: "midThumb",
                                  openPopup: function(e) {
                                    return _vm.getThis.openPopup__(item.id, e)
                                  },
                                  title: item.title,
                                  source: item.source,
                                  date: item.publishDate,
                                  id: item.id
                                }
                              })
                            ],
                            1
                          )
                        }),
                        0
                      )
                    : this.typeContent == "thumb" && this.listBookmark == null
                    ? _c("ul", { staticClass: "list_afnews-mid" }, [
                        _c(
                          "li",
                          {
                            staticClass: "txt",
                            staticStyle: { "text-align": "center" }
                          },
                          [
                            _vm._v(
                              "\n                        Chưa có thông tin\n                    "
                            )
                          ]
                        )
                      ])
                    : this.typeContent == "cateBox"
                    ? _c("div", [
                        this.categoryInterested == null &&
                        this.specializedNews == null
                          ? _c(
                              "div",
                              {
                                staticClass: "txt",
                                staticStyle: { "text-align": "center" }
                              },
                              [
                                _vm._v(
                                  "\n                        Chưa có thông tin\n                    "
                                )
                              ]
                            )
                          : _c(
                              "div",
                              [
                                this.categoryInterested != null &&
                                this.categoryInterested.length > 0
                                  ? _c("CateBox", {
                                      attrs: {
                                        title: "Chuyên mục",
                                        data: this.categoryInterested
                                      }
                                    })
                                  : _vm._e(),
                                _vm._v(" "),
                                this.specializedNews != null &&
                                this.specializedNews.length > 0
                                  ? _c("CateBox", {
                                      attrs: {
                                        title: "Chuyên trang",
                                        data: this.specializedNews
                                      }
                                    })
                                  : _vm._e()
                              ],
                              1
                            )
                      ])
                    : this.typeContent == "content"
                    ? _c("PopupPost", {
                        attrs: { state: this.state, dataId: this.id }
                      })
                    : this.typeContent == "bigevent" ||
                      this.typeContent == "hottopic"
                    ? _c("div", [
                        this.topicArticles != null
                          ? _c(
                              "ul",
                              { staticClass: "list_afnews-mid" },
                              [
                                _vm._l(this.topicArticles, function(
                                  item,
                                  index
                                ) {
                                  return _c(
                                    "li",
                                    { key: index },
                                    [
                                      _c("CardTextRight", {
                                        attrs: {
                                          type: "midThumb",
                                          data: item,
                                          openPopup: function(e) {
                                            return _vm.getThis.openPopup__(
                                              item.id,
                                              e
                                            )
                                          },
                                          styleThumb: {
                                            marginBottom: "0",
                                            marginRight: "20px",
                                            flexShrink: "0"
                                          },
                                          sizeSource: 13,
                                          showPreview: true,
                                          positionSource: "bottom"
                                        }
                                      })
                                    ],
                                    1
                                  )
                                }),
                                _vm._v(" "),
                                this.showLoadMore
                                  ? _c("li", [_c("SkeTextRight")], 1)
                                  : _vm._e()
                              ],
                              2
                            )
                          : _c("ul", [
                              _c("li", [_c("SkeTextRight")], 1),
                              _vm._v(" "),
                              _c("li", [_c("SkeTextRight")], 1),
                              _vm._v(" "),
                              _c("li", [_c("SkeTextRight")], 1)
                            ])
                      ])
                    : _vm._e()
                ],
                1
              ),
              _vm._v(" "),
              _c("Footer")
            ],
            1
          )
        ]
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./src/components/Popup/index.vue":
/*!****************************************!*\
  !*** ./src/components/Popup/index.vue ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_475807a2_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=475807a2&scoped=true& */ "./src/components/Popup/index.vue?vue&type=template&id=475807a2&scoped=true&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./src/components/Popup/index.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _index_vue_vue_type_style_index_0_id_475807a2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css& */ "./src/components/Popup/index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_475807a2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_475807a2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  "475807a2",
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/components/Popup/index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./src/components/Popup/index.vue?vue&type=script&lang=js&":
/*!*****************************************************************!*\
  !*** ./src/components/Popup/index.vue?vue&type=script&lang=js& ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--0!../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Popup/index.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/components/Popup/index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css&":
/*!*************************************************************************************************!*\
  !*** ./src/components/Popup/index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css& ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_475807a2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css& */ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/Popup/index.vue?vue&type=style&index=0&id=475807a2&scoped=true&lang=css&");
/* empty/unused harmony star reexport */

/***/ }),

/***/ "./src/components/Popup/index.vue?vue&type=template&id=475807a2&scoped=true&":
/*!***********************************************************************************!*\
  !*** ./src/components/Popup/index.vue?vue&type=template&id=475807a2&scoped=true& ***!
  \***********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_475807a2_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=475807a2&scoped=true& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/Popup/index.vue?vue&type=template&id=475807a2&scoped=true&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_475807a2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_475807a2_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,