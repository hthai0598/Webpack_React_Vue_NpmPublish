
.cate-item[data-v-b56ada98] {
    width: 48.5%;
    display: flex;
    align-items: center;
    padding: 15px;
    box-sizing: border-box;
    border: 1px solid #e5e5e5;
    border-radius: 10px;
    position: relative;
    margin-bottom: 20px;
}
.thumb[data-v-b56ada98] {
    width: 50px;
    height: 50px;
    display: block;
    margin-right: 10px;
}
.thumb > img[data-v-b56ada98] {
        width: 100%;
}
.cate-item .info[data-v-b56ada98] {
    display: flex;
    flex-direction: column;
}
.info a[data-v-b56ada98] {
    font-size: 15px;
    line-height: 20px;
    color: #353535;
    font-family: SFPD-SemiBold;
}
.info .des[data-v-b56ada98] {
    font-size: 13px;
    line-height: 16px;
    color: #8e8e8e;
    font-family: SFPD-Regular;
}
.list-cate .cate-item .close-cate[data-v-b56ada98] {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 15px;
    width: 24px;
    height: 24px;
    background: #aaaaaa;
    border-radius: 100px;
    display: none;
    align-items: center;
    justify-content: center;
}
.list-cate .cate-item:hover .close-cate[data-v-b56ada98] {
    display: flex;
}


.cate-box[data-v-3152dbca] {
    width: 700px;
    max-width: 100%;
    display: flex;
    flex-direction: column;
    margin-bottom: 30px;
}
.cate-box .cate-label[data-v-3152dbca] {
        font-size: 15px;
        line-height: 20px;
        color: #8e8e8e;
        font-family: SFPD-SemiBold;
        margin-bottom: 15px;
}
.list-cate[data-v-3152dbca] {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/